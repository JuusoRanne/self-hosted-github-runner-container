name: Deploy Infrastructure Prod

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  terraform_plan_prod:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: ${{ vars.CONTAINER_IMAGE_NAME}}
      TF_VAR_acr_login_server: ${{ secrets.ACR_LOGIN_SERVER }}
      TF_VAR_acr_tag: ${{ vars.CONTAINER_IMAGE_NAME }}
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID_PROD }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID_PROD }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_USE_OIDC: true 

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set Up Azure CLI
        uses: Azure/login@v2.2.0
        with:
          client-id: ${{ env.ARM_CLIENT_ID }}
          tenant-id: ${{ env.ARM_TENANT_ID}}
          subscription-id: ${{ env.ARM_SUBSCRIPTION_ID}}
       

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Initialize Terraform
        run: |
          eval `ssh-agent -s`
          ssh-add - <<< "${{ secrets.ACTIONS_DEPLOY_KEY_PRIVATE }}"
          terraform init -upgrade -backend-config=terraform/backend-prod.tfvars

      - name: Validate Terraform
        run: terraform validate

      - name: Plan Terraform
        run: terraform plan -var-file=terraform/env/prod.tfvars 
        

  terraform_apply_prod:
    needs: terraform_plan_prod
    runs-on: ubuntu-latest


    env:
      TF_VAR_graph_api_azure_client_secret: ${{ secrets.GRAPH_API_AZURE_CLIENT_SECRET_DEV }}
      IMAGE_NAME: ${{ vars.CONTAINER_IMAGE_NAME}}
      TF_VAR_acr_login_server: ${{ secrets.ACR_LOGIN_SERVER }}
      TF_VAR_acr_tag: ${{ vars.CONTAINER_IMAGE_NAME_PROD }}
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID_PROD }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID_PROD }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_USE_OIDC: true 

    steps:

      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set Up Azure CLI
        uses: Azure/login@v2.2.0        
        with:
          client-id: ${{ env.ARM_CLIENT_ID }}
          tenant-id: ${{ env.ARM_TENANT_ID}}
          subscription-id: ${{ env.ARM_SUBSCRIPTION_ID}}

      - name: Print Image Name
        run: echo $IMAGE_NAME
      

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Initialize Terraform
        run: |
          eval `ssh-agent -s`
          ssh-add - <<< "${{ secrets.ACTIONS_DEPLOY_KEY_PRIVATE }}"
          terraform init -upgrade -backend-config=terraform/backend-prod.tfvars

      - name: Apply Terraform 
        run : terraform apply -var-file=terraform/env/prod.tfvars -auto-approve 
